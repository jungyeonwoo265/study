# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'title.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
from PyQt5.QtWidgets import *
from PyQt5.QtGui import *
import urllib.request
from PyQt5 import uic
import webbrowser
import csv
import random
from PyQt5 import QtWidgets
from login import WindowClass
from rental_singa import Rental
from lib_2 import SearchBookInfo
from selenium import webdriver
from selenium.webdriver.common.by import By
import time
from PyQt5.QtCore import Qt
form_class = uic.loadUiType("title.ui")[0]


class FirstClass(QMainWindow, form_class):
    def __init__(self) :
        super().__init__()
        self.setupUi(self)
        self.img()
        self.txt()
        self.rebooks=[]
        self.num=0
        self.id=0
        self.reco.itemClicked.connect(self.test)
        self.pushButton_1.clicked.connect(self.ren)
        self.pushButton_2.clicked.connect(self.lib)
        self.pushButton_3.clicked.connect(self.back)
        self.pushButton_4.clicked.connect(self.login)
        login.login.clicked.connect(self.back2)
        self.pushButton_5.clicked.connect(self.page2)
        self.pushButton_6.clicked.connect(self.page3)
        self.pushButton_7.clicked.connect(self.page1)
        self.pushButton_10.clicked.connect(lambda: webbrowser.open('https://lib.gwangsan.go.kr/main/scheduleMonth/SG'))
        self.pushButton_8.clicked.connect(self.back)
        self.pushButton_9.clicked.connect(self.back)
        self.pushButton_11.clicked.connect(lambda: webbrowser.open('https://lib.gwangsan.go.kr/main/board/3/1/category15/read/1629?query='))
        self.pushButton_12.clicked.connect(lambda: webbrowser.open('https://lib.gwangsan.go.kr/main/board/3/1/category15/read/1618?query='))
        self.pushButton_13.clicked.connect(lambda: webbrowser.open('https://lib.gwangsan.go.kr/main/board/3/1/category15/read/1614?query='))
        self.pushButton_14.clicked.connect(lambda: webbrowser.open('https://lib.gwangsan.go.kr/main/board/3/1/category15/read/1611?query='))
        self.pushButton_15.clicked.connect(lambda: webbrowser.open('https://lib.gwangsan.go.kr/main/board/3/1/category15/read/1605?query='))
        self.pushButton_16.clicked.connect(lambda: webbrowser.open('https://lib.gwangsan.go.kr/main/board/3/1/category15/read/1599?query='))
        self.pushButton_17.clicked.connect(lambda: webbrowser.open('https://lib.gwangsan.go.kr/main/board/3/1/category15/read/1590?query='))
        self.stackedWidget.setCurrentIndex(0)
        self.reset.clicked.connect(self.resetb)
    def back(self):
        self.stackedWidget.setCurrentIndex(0)
    def back2(self):
        self.id=login.loginaction()
        login.clear_id()
        if self.id != 0:
            self.name.setText(self.id+"님 안녕하세요")
            self.pushButton_4.setText('로그아웃')
        self.parent().setCurrentIndex(0)
    def page1(self):
        self.stackedWidget.setCurrentIndex(1)
    def page2(self):
        self.stackedWidget.setCurrentIndex(2)
    def page3(self):
        self.stackedWidget.setCurrentIndex(3)
    def img(self):
        # self.label_pic = QLabel(self)
        urlString = 'https://mblogthumb-phinf.pstatic.net/MjAxODA2MDFfMjM1/MDAxNTI3ODI5NDQ4ODEx.XycqawF5_cu6bGoyeUOr8zqFOgUkV5aXVFVjSjjRL54g.e8Ct-1rajGbjuYPR6B8hENZLjHbAav_rpl8ijra-DKYg.PNG.passdongs/image.png?type=w800'
        urlString2= 'https://lib.gwangsan.go.kr/images/ui/SG/logo.png?1'
        urlString3='https://www.shutterstock.com/image-vector/man-holding-megaphone-speech-bubbles-260nw-2079473878.jpg'
        urlString4 = 'https://lib.gwangsan.go.kr/images/ui/sub/facilitystatus/SG/facilitystatus4_1.jpg'
        urlString5 = 'https://lib.gwangsan.go.kr/images/ui/sub/facilitystatus/SG/facilitystatus4_2.jpg'
        urlString6 = 'https://lib.gwangsan.go.kr/images/ui/sub/facilitystatus/SG/facilitystatus4_3.jpg'
        urlString7 = 'https://lib.gwangsan.go.kr/images/ui/sub/facilitystatus/SG/facilitystatus4_4.jpg'

        urlString11 = 'https://img.freepik.com/premium-photo/blurred-bookshelf-many-old-books-in-a-book-shop-or-library_36051-477.jpg'
        urlString12 = 'https://lib.gwangsan.go.kr/upload/banner/banner2.jpg'
        urlString13 = 'https://lib.gwangsan.go.kr/upload/banner/banner3.jpg'
        urlString14 = 'https://lib.gwangsan.go.kr/upload/banner/banner1.jpg'
        urlString15 = 'https://lib.gwangsan.go.kr/upload/banner/banner5.jpg'
        urlString16 = 'https://lib.gwangsan.go.kr/upload/banner/banner4.jpg'
        urlString17 = 'https://lib.gwangsan.go.kr/upload/banner/banner6.jpg'

        imageFromWeb = urllib.request.urlopen(urlString).read()
        imageFromWeb2 = urllib.request.urlopen(urlString2).read()
        imageFromWeb3 = urllib.request.urlopen(urlString3).read()
        imageFromWeb4 = urllib.request.urlopen(urlString4).read()  # 시설이미지
        imageFromWeb5 = urllib.request.urlopen(urlString5).read()
        imageFromWeb6 = urllib.request.urlopen(urlString6).read()
        imageFromWeb7 = urllib.request.urlopen(urlString7).read()

        imageFromWeb11 = urllib.request.urlopen(urlString11).read()
        imageFromWeb12 = urllib.request.urlopen(urlString12).read()
        imageFromWeb13 = urllib.request.urlopen(urlString13).read()
        imageFromWeb14 = urllib.request.urlopen(urlString14).read()
        imageFromWeb15 = urllib.request.urlopen(urlString15).read()
        imageFromWeb16 = urllib.request.urlopen(urlString16).read()
        imageFromWeb17 = urllib.request.urlopen(urlString17).read()


        qPixmapVar = QPixmap()
        qPixmapVar2 = QPixmap()
        qPixmapVar3 = QPixmap()
        qPixmapVar4 = QPixmap()
        qPixmapVar5 = QPixmap()
        qPixmapVar6 = QPixmap()
        qPixmapVar7 = QPixmap()
        qPixmapVar8 = QPixmap()
        qPixmapVar9 = QPixmap()
        qPixmapVar10 = QPixmap()
        qPixmapVar11 = QPixmap()
        qPixmapVar12 = QPixmap()
        qPixmapVar13 = QPixmap()
        qPixmapVar14 = QPixmap()
        qPixmapVar15 = QPixmap()
        qPixmapVar16 = QPixmap()
        qPixmapVar17 = QPixmap()

        qPixmapVar.loadFromData(imageFromWeb)
        qPixmapVar2.loadFromData(imageFromWeb2)
        qPixmapVar3.loadFromData(imageFromWeb3)
        qPixmapVar4.loadFromData(imageFromWeb4)
        qPixmapVar5.loadFromData(imageFromWeb5)
        qPixmapVar6.loadFromData(imageFromWeb6)
        qPixmapVar7.loadFromData(imageFromWeb7)

        qPixmapVar11.loadFromData(imageFromWeb11)
        qPixmapVar12.loadFromData(imageFromWeb12)
        qPixmapVar13.loadFromData(imageFromWeb13)
        qPixmapVar14.loadFromData(imageFromWeb14)
        qPixmapVar15.loadFromData(imageFromWeb15)
        qPixmapVar16.loadFromData(imageFromWeb16)
        qPixmapVar17.loadFromData(imageFromWeb17)


        self.label_pic.setPixmap(qPixmapVar)
        self.main_pic.setPixmap(qPixmapVar2)
        self.event_pic.setPixmap(qPixmapVar3)
        self.label_11.setPixmap(qPixmapVar4)
        self.label_12.setPixmap(qPixmapVar5)
        self.label_13.setPixmap(qPixmapVar6)
        self.label_14.setPixmap(qPixmapVar7)

        self.backimg.setPixmap(QPixmap(qPixmapVar11).scaled(self.width(), self.height(),Qt.IgnoreAspectRatio))
        self.backimg2.setPixmap(QPixmap(qPixmapVar11).scaled(self.width(), self.height(), Qt.IgnoreAspectRatio))
        self.backimg3.setPixmap(QPixmap(qPixmapVar11).scaled(self.width(), self.height(), Qt.IgnoreAspectRatio))
        self.center.setPixmap(qPixmapVar12)
        self.nation.setPixmap(qPixmapVar13)
        self.gwangsan.setPixmap(qPixmapVar14)
        self.silib.setPixmap(qPixmapVar15)
        self.guklib.setPixmap(qPixmapVar16)
        self.gwangju.setPixmap(qPixmapVar17)
        # self.head.setStyleSheet("background-color: gray")
        self.foot.setStyleSheet("background-color: white")
        self.lib1.setStyleSheet("color: white;"
                                "background-color: gray")
        self.event1.setStyleSheet("color: white;"
                                "background-color: gray")
        self.recommend1.setStyleSheet("color: black;"
                                "background-color: white")
        self.info1.setStyleSheet("color: white;"
                                "background-color: gray")
    def txt(self):
        self.label_9.setText("일정 및 행사")
        self.label_2.setText("광산구립신가도서관 임시휴관 안내")
        self.label_3.setText("신가도서관 희망도서 접수 마감 안내")
        self.label_4.setText("10월의 하늘(과학자들의 재능기부 강연)(신가도서관)")
        self.label_5.setText("디지털 시민, 온라인으로 소통하다(스마트폰 활용 교육) 수강생 모집")
        self.label_6.setText("나는 어린이 유튜버!(어린이 미디어 리터러시 교육) 수강생 모집 안내")
        self.label_7.setText("스토리가 있는 동화 공연:너영나영 모집 안내")
        self.label_8.setText("4분기 독서문화프로그램 수강생 모집 안내")
        self.label.setText("            대지	11,948㎡\n\
            건물면적	연면적 1,888㎡(철근콘크리트 지하1층에서 지상 3층 규모)\n\
            층별안내	\n\
            4층 : 학습실, 휴게실, 노트북실\n\
            3층 : 종합자료실, 문화교실\n\
            2층 : 어린이자료실, 사무실\n\
            1층 : 기계실, 전기실, 다목적실, 경비실, 주차장")

    def recommend(self):
        f = open('신가도서관.csv', 'r')
        rdr = csv.reader(f)
        num = random.randrange(1, 70881)
        for line in rdr:
            if line[0] == str(num):
                return line
    def resetb(self):
        self.reco.clear()
        for i in range(0,10):
            self.rebooks=(self.recommend())
            print(self.rebooks[4:7])
            self.reco.insertItem(i,str(self.rebooks[4:7]))
    def test(self):
        row=self.reco.currentItem().text()
        rows = row.split(',')
        print(rows)
        path = "chromedriver.exe"  # 개인의 드라이버 경로를 적으세요#
        driver = webdriver.Chrome(path)

        driver.get("https://www.google.com")
        time.sleep(1)

        # step 2. 검색창을 이름으로 찾아서 검색한다.
        element = driver.find_element(By.NAME, "q")  # 검색창 html의 name이 'q'여서 q다
        element.send_keys(list(rows[0:2]))  # 검색 단어를 입력한다
        element.submit()
        time.sleep(10)
    def login(self):
        if not self.id:
            widget.setCurrentIndex(1)
        else:
            self.id = 0
            self.name.setText("")
            self.pushButton_4.setText('로그인')
    def ren(self):
        if self.id:
            widget.setCurrentIndex(2)
    def lib(self):
            widget.setCurrentIndex(3)

    # def login2(self):
    #     if self.num==1:
    #         self.ids = login.loginaction()
    #         print(self.ids,"!!!!!!!!!!!!!!!!!")
if __name__ == "__main__" :
    # form_class = uic.loadUiType("title.ui")[0]
    #QApplication : 프로그램을 실행시켜주는 클래스
    app = QApplication(sys.argv)
    widget = QtWidgets.QStackedWidget()
    #WindowClass의 인스턴스 생성
    login = WindowClass()
    myWindow = FirstClass()
    rental = Rental()
    lib2 = SearchBookInfo()
    #프로그램 화면을 보여주는 코드
    widget.addWidget(myWindow)
    widget.addWidget(login)
    widget.addWidget(rental)
    widget.addWidget(lib2)
    widget.setFixedHeight(800)
    widget.setFixedWidth(1200)
    widget.show()
    # myWindow.show()
    #프로그램을 이벤트루프로 진입시키는(프로그램을 작동시키는) 코드
    app.exec_()


